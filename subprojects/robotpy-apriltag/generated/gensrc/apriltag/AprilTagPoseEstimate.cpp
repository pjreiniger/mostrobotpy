
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/apriltag/AprilTagPoseEstimate.h>
















#include <type_traits>


  using namespace frc;





struct rpybuild_AprilTagPoseEstimate_initializer {


  

  












  py::class_<typename frc::AprilTagPoseEstimate> cls_AprilTagPoseEstimate;

    

    
    

  py::module &m;

  
  rpybuild_AprilTagPoseEstimate_initializer(py::module &m) :

  

  

  

  
    cls_AprilTagPoseEstimate(m, "AprilTagPoseEstimate"),

  

  
  
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {





  {
  
  
  


  

  cls_AprilTagPoseEstimate.doc() =
    "A pair of AprilTag pose estimates.";

  cls_AprilTagPoseEstimate
  
    .def(py::init<>(), release_gil())
  
    
  .
def
("getAmbiguity", &frc::AprilTagPoseEstimate::GetAmbiguity, release_gil(), py::doc(
    "Gets the ratio of pose reprojection errors, called ambiguity. Numbers\n"
"above 0.2 are likely to be ambiguous.\n"
"\n"
":returns: The ratio of pose reprojection errors.")
  )
  
  
  
    .def_readwrite("pose1", &frc::AprilTagPoseEstimate::pose1, py::doc(
    "Pose 1."))
  
    .def_readwrite("pose2", &frc::AprilTagPoseEstimate::pose2, py::doc(
    "Pose 2."))
  
    .def_readwrite("error1", &frc::AprilTagPoseEstimate::error1, py::doc(
    "Object-space error of pose 1."))
  
    .def_readwrite("error2", &frc::AprilTagPoseEstimate::error2, py::doc(
    "Object-space error of pose 2."))
  ;

  


  }






}

}; // struct rpybuild_AprilTagPoseEstimate_initializer

static std::unique_ptr<rpybuild_AprilTagPoseEstimate_initializer> cls;

void begin_init_AprilTagPoseEstimate(py::module &m) {
  cls = std::make_unique<rpybuild_AprilTagPoseEstimate_initializer>(m);
}

void finish_init_AprilTagPoseEstimate() {
  cls->finish();
  cls.reset();
}