
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <wpi/sendable/Sendable.h>








#define RPYGEN_ENABLE_wpi__Sendable_PROTECTED_CONSTRUCTORS
#include <rpygen/wpi__Sendable.hpp>







#include <wpi/sendable/SendableBuilder.h>



#include <type_traits>


  using namespace wpi;



struct rpybuild_Sendable_initializer {


  

  












  
  using Sendable_Trampoline = rpygen::PyTrampoline_wpi__Sendable<typename wpi::Sendable, typename rpygen::PyTrampolineCfg_wpi__Sendable<>>;
    static_assert(std::is_abstract<Sendable_Trampoline>::value == false, "wpi::Sendable " RPYBUILD_BAD_TRAMPOLINE);
  py::class_<typename wpi::Sendable, Sendable_Trampoline> cls_Sendable;

    

    
    

  py::module &m;

  
  rpybuild_Sendable_initializer(py::module &m) :

  

  

  

  
    cls_Sendable(m, "Sendable"),

  

  
  
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {





  {
  
  
  


  

  cls_Sendable.doc() =
    "Interface for Sendable objects.";

  cls_Sendable
  
    .def(py::init<>(), release_gil())
  
    
  .
def
("initSendable", &wpi::Sendable::InitSendable,
      py::arg("builder"), release_gil(), py::doc(
    "Initializes this Sendable object.\n"
"\n"
":param builder: sendable builder")
  )
  
  
  ;

  


  }






}

}; // struct rpybuild_Sendable_initializer

static std::unique_ptr<rpybuild_Sendable_initializer> cls;

void begin_init_Sendable(py::module &m) {
  cls = std::make_unique<rpybuild_Sendable_initializer>(m);
}

void finish_init_Sendable() {
  cls->finish();
  cls.reset();
}