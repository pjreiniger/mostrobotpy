
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <wpystruct_fns.h>


#include <pybind11/functional.h>

#include <wpystruct.h>















#include <type_traits>






struct rpybuild_WPyStruct_initializer {




  py::module pkg_wpistruct;










  py::module &m;

  
  rpybuild_WPyStruct_initializer(py::module &m) :

  
    pkg_wpistruct(m.def_submodule("wpistruct")),
  

  

  

  

    m(m)
  {
    
    

    
  }

void finish() {







pkg_wpistruct
  .
def
("forEachNested", &::forEachNested,
      py::arg("t"), py::arg("fn").none(false), py::doc(
    "Call a function to retrieve the (type string, schema) for each nested struct")
  )
  
  ;
pkg_wpistruct
  .
def
("getTypeString", &::getTypeString,
      py::arg("t"), py::doc(
    "Retrieve the type string for the specified type")
  )
  
  ;
pkg_wpistruct
  .
def
("getSchema", &::getSchema,
      py::arg("t"), py::doc(
    "Retrieve schema for the specified type")
  )
  
  ;
pkg_wpistruct
  .
def
("getSize", &::getSize,
      py::arg("t"), py::doc(
    "Returns the serialized size in bytes")
  )
  
  ;
pkg_wpistruct
  .
def
("pack", &::pack,
      py::arg("v"), py::doc(
    "Serialize object into byte buffer")
  )
  
  ;
pkg_wpistruct
  .
def
("packInto", &::packInto,
      py::arg("v"), py::arg("b"), py::doc(
    "Serialize object into byte buffer. Buffer must be exact size.")
  )
  
  ;
pkg_wpistruct
  .
def
("unpack", &::unpack,
      py::arg("t"), py::arg("b"), py::doc(
    "Convert byte buffer into object of specified type. Buffer must be exact\n"
"size.")
  )
  
  ;



}

}; // struct rpybuild_WPyStruct_initializer

static std::unique_ptr<rpybuild_WPyStruct_initializer> cls;

void begin_init_WPyStruct(py::module &m) {
  cls = std::make_unique<rpybuild_WPyStruct_initializer>(m);
}

void finish_init_WPyStruct() {
  cls->finish();
  cls.reset();
}