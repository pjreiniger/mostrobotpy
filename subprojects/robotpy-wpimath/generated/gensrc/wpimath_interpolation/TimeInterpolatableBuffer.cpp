
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/interpolation/TimeInterpolatableBuffer.h>


#include <pybind11/functional.h>

#include <pybind11/stl.h>

#include <units_time_type_caster.h>











#include "TimeInterpolatableBuffer_tmpl.hpp"



#include <frc/geometry/Pose3d.h>



#include <type_traits>


  using namespace frc;





struct rpybuild_TimeInterpolatableBuffer_initializer {












  
      rpygen::bind_frc__TimeInterpolatableBuffer_0 tmplCls0;
    
      rpygen::bind_frc__TimeInterpolatableBuffer_1 tmplCls1;
    
      rpygen::bind_frc__TimeInterpolatableBuffer_2 tmplCls2;
    
      rpygen::bind_frc__TimeInterpolatableBuffer_3 tmplCls3;
    
      rpygen::bind_frc__TimeInterpolatableBuffer_4 tmplCls4;
    
      rpygen::bind_frc__TimeInterpolatableBuffer_5 tmplCls5;
    
      rpygen::bind_frc__TimeInterpolatableBuffer_6 tmplCls6;
    

  py::module &m;

  
  rpybuild_TimeInterpolatableBuffer_initializer(py::module &m) :

  

  

  

  
    
        tmplCls0(m, "TimeInterpolatablePose2dBuffer"),
      
        tmplCls1(m, "TimeInterpolatablePose3dBuffer"),
      
        tmplCls2(m, "TimeInterpolatableRotation2dBuffer"),
      
        tmplCls3(m, "TimeInterpolatableRotation3dBuffer"),
      
        tmplCls4(m, "TimeInterpolatableTranslation2dBuffer"),
      
        tmplCls5(m, "TimeInterpolatableTranslation3dBuffer"),
      
        tmplCls6(m, "TimeInterpolatableFloatBuffer"),
      
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {



  tmplCls0.finish(
    NULL,
    NULL
  );

  tmplCls1.finish(
    NULL,
    NULL
  );

  tmplCls2.finish(
    NULL,
    NULL
  );

  tmplCls3.finish(
    NULL,
    NULL
  );

  tmplCls4.finish(
    NULL,
    NULL
  );

  tmplCls5.finish(
    NULL,
    NULL
  );

  tmplCls6.finish(
    NULL,
    NULL
  );








}

}; // struct rpybuild_TimeInterpolatableBuffer_initializer

static std::unique_ptr<rpybuild_TimeInterpolatableBuffer_initializer> cls;

void begin_init_TimeInterpolatableBuffer(py::module &m) {
  cls = std::make_unique<rpybuild_TimeInterpolatableBuffer_initializer>(m);
}

void finish_init_TimeInterpolatableBuffer() {
  cls->finish();
  cls.reset();
}