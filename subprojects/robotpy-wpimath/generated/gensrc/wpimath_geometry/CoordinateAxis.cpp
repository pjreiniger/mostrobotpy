
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/geometry/CoordinateAxis.h>
















#include <type_traits>


  using namespace frc;



struct rpybuild_CoordinateAxis_initializer {


  

  












  py::class_<typename frc::CoordinateAxis> cls_CoordinateAxis;

    

    
    

  py::module &m;

  
  rpybuild_CoordinateAxis_initializer(py::module &m) :

  

  

  

  
    cls_CoordinateAxis(m, "CoordinateAxis"),

  

  
  
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {





  {
  
  
  


  

  cls_CoordinateAxis.doc() =
    "A class representing a coordinate system axis within the NWU coordinate\n"
"system.";

  cls_CoordinateAxis
  
    
  .def(py::init<double, double, double>(),
      py::arg("x"), py::arg("y"), py::arg("z"), release_gil(), py::doc(
    "Constructs a coordinate system axis within the NWU coordinate system and\n"
"normalizes it.\n"
"\n"
":param x: The x component.\n"
":param y: The y component.\n"
":param z: The z component.")
  )
  
  
  
    
  .
def_static
("N", &frc::CoordinateAxis::N, release_gil(), py::doc(
    "Returns a coordinate axis corresponding to +X in the NWU coordinate system.")
  )
  
  
  
    
  .
def_static
("S", &frc::CoordinateAxis::S, release_gil(), py::doc(
    "Returns a coordinate axis corresponding to -X in the NWU coordinate system.")
  )
  
  
  
    
  .
def_static
("E", &frc::CoordinateAxis::E, release_gil(), py::doc(
    "Returns a coordinate axis corresponding to -Y in the NWU coordinate system.")
  )
  
  
  
    
  .
def_static
("W", &frc::CoordinateAxis::W, release_gil(), py::doc(
    "Returns a coordinate axis corresponding to +Y in the NWU coordinate system.")
  )
  
  
  
    
  .
def_static
("U", &frc::CoordinateAxis::U, release_gil(), py::doc(
    "Returns a coordinate axis corresponding to +Z in the NWU coordinate system.")
  )
  
  
  
    
  .
def_static
("D", &frc::CoordinateAxis::D, release_gil(), py::doc(
    "Returns a coordinate axis corresponding to -Z in the NWU coordinate system.")
  )
  
  
  ;

  


  }






}

}; // struct rpybuild_CoordinateAxis_initializer

static std::unique_ptr<rpybuild_CoordinateAxis_initializer> cls;

void begin_init_CoordinateAxis(py::module &m) {
  cls = std::make_unique<rpybuild_CoordinateAxis_initializer>(m);
}

void finish_init_CoordinateAxis() {
  cls->finish();
  cls.reset();
}