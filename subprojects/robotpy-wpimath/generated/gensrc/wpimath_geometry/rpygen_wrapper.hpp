// This file is autogenerated, DO NOT EDIT
#pragma once
#include <robotpy_build.h>

// forward declarations
void begin_init_CoordinateAxis(py::module &m);
void finish_init_CoordinateAxis();
void begin_init_CoordinateSystem(py::module &m);
void finish_init_CoordinateSystem();
void begin_init_Ellipse2d(py::module &m);
void finish_init_Ellipse2d();
void begin_init_Pose2d(py::module &m);
void finish_init_Pose2d();
void begin_init_Pose3d(py::module &m);
void finish_init_Pose3d();
void begin_init_Quaternion(py::module &m);
void finish_init_Quaternion();
void begin_init_Rectangle2d(py::module &m);
void finish_init_Rectangle2d();
void begin_init_Rotation2d(py::module &m);
void finish_init_Rotation2d();
void begin_init_Rotation3d(py::module &m);
void finish_init_Rotation3d();
void begin_init_Transform2d(py::module &m);
void finish_init_Transform2d();
void begin_init_Transform3d(py::module &m);
void finish_init_Transform3d();
void begin_init_Translation2d(py::module &m);
void finish_init_Translation2d();
void begin_init_Translation3d(py::module &m);
void finish_init_Translation3d();
void begin_init_Twist2d(py::module &m);
void finish_init_Twist2d();
void begin_init_Twist3d(py::module &m);
void finish_init_Twist3d();

static void initWrapper(py::module &m) {
    begin_init_CoordinateAxis(m);
    begin_init_CoordinateSystem(m);
    begin_init_Ellipse2d(m);
    begin_init_Pose2d(m);
    begin_init_Pose3d(m);
    begin_init_Quaternion(m);
    begin_init_Rectangle2d(m);
    begin_init_Rotation2d(m);
    begin_init_Rotation3d(m);
    begin_init_Transform2d(m);
    begin_init_Transform3d(m);
    begin_init_Translation2d(m);
    begin_init_Translation3d(m);
    begin_init_Twist2d(m);
    begin_init_Twist3d(m);

    finish_init_CoordinateAxis();
    finish_init_CoordinateSystem();
    finish_init_Ellipse2d();
    finish_init_Pose2d();
    finish_init_Pose3d();
    finish_init_Quaternion();
    finish_init_Rectangle2d();
    finish_init_Rotation2d();
    finish_init_Rotation3d();
    finish_init_Transform2d();
    finish_init_Transform3d();
    finish_init_Translation2d();
    finish_init_Translation3d();
    finish_init_Twist2d();
    finish_init_Twist3d();
}