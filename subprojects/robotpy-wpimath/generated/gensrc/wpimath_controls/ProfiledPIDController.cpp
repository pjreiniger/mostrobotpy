
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/controller/ProfiledPIDController.h>


#include <units_angle_type_caster.h>

#include <units_angular_velocity_type_caster.h>

#include <units_compound_type_caster.h>

#include <units_misc_type_caster.h>

#include <units_time_type_caster.h>







#define RPYGEN_ENABLE_frc__ProfiledPIDController_PROTECTED_CONSTRUCTORS
#include <rpygen/frc__ProfiledPIDController.hpp>





#include "ProfiledPIDController_tmpl.hpp"





#include <type_traits>


  using namespace frc;

  using namespace frc::detail;





struct rpybuild_ProfiledPIDController_initializer {




  py::module pkg_controller;









  
      rpygen::bind_frc__ProfiledPIDController_0 tmplCls0;
    
      rpygen::bind_frc__ProfiledPIDController_1 tmplCls1;
    

  py::module &m;

  
  rpybuild_ProfiledPIDController_initializer(py::module &m) :

  
    pkg_controller(m.def_submodule("controller")),
  

  

  

  
    
        tmplCls0(pkg_controller, "ProfiledPIDController"),
      
        tmplCls1(pkg_controller, "ProfiledPIDControllerRadians"),
      
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {



  tmplCls0.finish(
    NULL,
    NULL
  );

  tmplCls1.finish(
    NULL,
    NULL
  );








}

}; // struct rpybuild_ProfiledPIDController_initializer

static std::unique_ptr<rpybuild_ProfiledPIDController_initializer> cls;

void begin_init_ProfiledPIDController(py::module &m) {
  cls = std::make_unique<rpybuild_ProfiledPIDController_initializer>(m);
}

void finish_init_ProfiledPIDController() {
  cls->finish();
  cls.reset();
}