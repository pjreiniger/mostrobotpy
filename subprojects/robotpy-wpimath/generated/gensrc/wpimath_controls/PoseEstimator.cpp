
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/estimator/PoseEstimator.h>


#include <units_time_type_caster.h>

#include <wpi_array_type_caster.h>











#include "PoseEstimator_tmpl.hpp"



#include <frc/kinematics/DifferentialDriveWheelPositions.h>

#include <frc/kinematics/DifferentialDriveWheelSpeeds.h>

#include <frc/kinematics/MecanumDriveWheelPositions.h>

#include <frc/kinematics/MecanumDriveWheelSpeeds.h>

#include <frc/kinematics/SwerveDriveKinematics.h>

#include <frc/kinematics/SwerveDriveWheelPositions.h>



#include <type_traits>


  using namespace frc;





struct rpybuild_PoseEstimator_initializer {




  py::module pkg_estimator;









  
      rpygen::bind_frc__PoseEstimator_0 tmplCls0;
    
      rpygen::bind_frc__PoseEstimator_1 tmplCls1;
    
      rpygen::bind_frc__PoseEstimator_2 tmplCls2;
    
      rpygen::bind_frc__PoseEstimator_3 tmplCls3;
    
      rpygen::bind_frc__PoseEstimator_4 tmplCls4;
    
      rpygen::bind_frc__PoseEstimator_5 tmplCls5;
    

  py::module &m;

  
  rpybuild_PoseEstimator_initializer(py::module &m) :

  
    pkg_estimator(m.def_submodule("estimator")),
  

  

  

  
    
        tmplCls0(pkg_estimator, "DifferentialDrivePoseEstimatorBase"),
      
        tmplCls1(pkg_estimator, "MecanumDrivePoseEstimatorBase"),
      
        tmplCls2(pkg_estimator, "SwerveDrive2PoseEstimatorBase"),
      
        tmplCls3(pkg_estimator, "SwerveDrive3PoseEstimatorBase"),
      
        tmplCls4(pkg_estimator, "SwerveDrive4PoseEstimatorBase"),
      
        tmplCls5(pkg_estimator, "SwerveDrive6PoseEstimatorBase"),
      
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {



  tmplCls0.finish(
    NULL,
    NULL
  );

  tmplCls1.finish(
    NULL,
    NULL
  );

  tmplCls2.finish(
    NULL,
    NULL
  );

  tmplCls3.finish(
    NULL,
    NULL
  );

  tmplCls4.finish(
    NULL,
    NULL
  );

  tmplCls5.finish(
    NULL,
    NULL
  );








}

}; // struct rpybuild_PoseEstimator_initializer

static std::unique_ptr<rpybuild_PoseEstimator_initializer> cls;

void begin_init_PoseEstimator(py::module &m) {
  cls = std::make_unique<rpybuild_PoseEstimator_initializer>(m);
}

void finish_init_PoseEstimator() {
  cls->finish();
  cls.reset();
}