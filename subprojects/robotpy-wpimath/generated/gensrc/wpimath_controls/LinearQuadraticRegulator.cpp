
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/controller/LinearQuadraticRegulator.h>


#include <pybind11/eigen.h>

#include <units_time_type_caster.h>

#include <wpi_array_type_caster.h>











#include "LinearQuadraticRegulator_tmpl.hpp"





#include <type_traits>


  using namespace frc;



struct rpybuild_LinearQuadraticRegulator_initializer {




  py::module pkg_controller;









  
      rpygen::bind_frc__LinearQuadraticRegulator_0 tmplCls0;
    
      rpygen::bind_frc__LinearQuadraticRegulator_1 tmplCls1;
    
      rpygen::bind_frc__LinearQuadraticRegulator_2 tmplCls2;
    
      rpygen::bind_frc__LinearQuadraticRegulator_3 tmplCls3;
    

  py::module &m;

  
  rpybuild_LinearQuadraticRegulator_initializer(py::module &m) :

  
    pkg_controller(m.def_submodule("controller")),
  

  

  

  
    
        tmplCls0(pkg_controller, "LinearQuadraticRegulator_1_1"),
      
        tmplCls1(pkg_controller, "LinearQuadraticRegulator_2_1"),
      
        tmplCls2(pkg_controller, "LinearQuadraticRegulator_2_2"),
      
        tmplCls3(pkg_controller, "LinearQuadraticRegulator_3_2"),
      
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {



  tmplCls0.finish(
    NULL,
    NULL
  );

  tmplCls1.finish(
    NULL,
    NULL
  );

  tmplCls2.finish(
    NULL,
    NULL
  );

  tmplCls3.finish(
    NULL,
    NULL
  );








}

}; // struct rpybuild_LinearQuadraticRegulator_initializer

static std::unique_ptr<rpybuild_LinearQuadraticRegulator_initializer> cls;

void begin_init_LinearQuadraticRegulator(py::module &m) {
  cls = std::make_unique<rpybuild_LinearQuadraticRegulator_initializer>(m);
}

void finish_init_LinearQuadraticRegulator() {
  cls->finish();
  cls.reset();
}