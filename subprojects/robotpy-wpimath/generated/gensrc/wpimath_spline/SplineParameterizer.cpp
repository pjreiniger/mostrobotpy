
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/spline/SplineParameterizer.h>


#include <pybind11/stl.h>

#include <units_compound_type_caster.h>















#include <type_traits>


  using namespace frc;





struct rpybuild_SplineParameterizer_initializer {


  

  












  py::class_<typename frc::SplineParameterizer> cls_SplineParameterizer;

    

    
    

  py::module &m;

  
  rpybuild_SplineParameterizer_initializer(py::module &m) :

  

  

  

  
    cls_SplineParameterizer(m, "SplineParameterizer"),

  

  
  
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {





  {
  
  
  
    using PoseWithCurvature [[maybe_unused]] = typename frc::SplineParameterizer::PoseWithCurvature;
  


  

  cls_SplineParameterizer.doc() =
    "Class used to parameterize a spline by its arc length.";

  cls_SplineParameterizer
  
    
  .
def_static
("parameterize", &frc::SplineParameterizer::template Parameterize<3>,
      py::arg("spline"), py::arg("t0") = 0.0, py::arg("t1") = 1.0, release_gil(), py::doc(
    "Parametrizes the spline. This method breaks up the spline into various\n"
"arcs until their dx, dy, and dtheta are within specific tolerances.\n"
"\n"
":param spline: The spline to parameterize.\n"
":param t0:     Starting internal spline parameter. It is recommended to leave\n"
"               this as default.\n"
":param t1:     Ending internal spline parameter. It is recommended to leave this\n"
"               as default.\n"
"\n"
":returns: A vector of poses and curvatures that represents various points on\n"
"          the spline.")
  )
  
  
    
  .
def_static
("parameterize", &frc::SplineParameterizer::template Parameterize<5>,
      py::arg("spline"), py::arg("t0") = 0.0, py::arg("t1") = 1.0, release_gil(), py::doc(
    "Parametrizes the spline. This method breaks up the spline into various\n"
"arcs until their dx, dy, and dtheta are within specific tolerances.\n"
"\n"
":param spline: The spline to parameterize.\n"
":param t0:     Starting internal spline parameter. It is recommended to leave\n"
"               this as default.\n"
":param t1:     Ending internal spline parameter. It is recommended to leave this\n"
"               as default.\n"
"\n"
":returns: A vector of poses and curvatures that represents various points on\n"
"          the spline.")
  )
  
  
    
  ;

  


  }






}

}; // struct rpybuild_SplineParameterizer_initializer

static std::unique_ptr<rpybuild_SplineParameterizer_initializer> cls;

void begin_init_SplineParameterizer(py::module &m) {
  cls = std::make_unique<rpybuild_SplineParameterizer_initializer>(m);
}

void finish_init_SplineParameterizer() {
  cls->finish();
  cls.reset();
}