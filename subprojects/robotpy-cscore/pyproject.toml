[build-system]
build-backend = "hatchling.build"
requires = [
    "semiwrap~=0.2.1",
    "hatch-meson~=0.1.0",
    "hatch-robotpy~=0.2.1",
    "hatchling",
    "robotpy-wpiutil==2027.0.0a3",
    "robotpy-wpinet==2027.0.0a3",
    "pyntcore==2027.0.0a3",
    # "numpy", # required for pybind11-stubgen to not complain, broken in raspbian CI
]

[project]
name = "robotpy-cscore"
version = "2027.0.0a3"
description = "RobotPy bindings for cscore image processing library"
authors = [
    {name = "RobotPy Development Team", email = "robotpy@googlegroups.com"},
]
license = "BSD-3-Clause"
dependencies = [
    "robotpy-wpiutil==2027.0.0a3",
    "robotpy-wpinet==2027.0.0a3",
    "pyntcore==2027.0.0a3",
]

[project.urls]
"Source code" = "https://github.com/robotpy/mostrobotpy"

[tool.hatch.build.targets.wheel]
packages = ["cscore"]

[tool.hatch.build.hooks.robotpy]
version_file = "cscore/version.py"

#
# cscore is different -- we download everything as a static library
# and don't include them in the wheel to avoid OpenCV symbol conflicts
#


[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "cscore-cpp"
group_id = "edu.wpi.first.cscore"
repo_url = "https://frcmaven.wpi.edu/artifactory/release-2027"
version = "2027.0.0-alpha-3"

staticlibs = ["cscore"]
extract_to = "lib"

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "cameraserver-cpp"
group_id = "edu.wpi.first.cameraserver"
repo_url = "https://frcmaven.wpi.edu/artifactory/release-2027"
version = "2027.0.0-alpha-3"

staticlibs = ["cameraserver"]
extract_to = "lib"

[[tool.hatch.build.hooks.robotpy.maven_lib_download]]
artifact_id = "opencv-cpp"
group_id = "edu.wpi.first.thirdparty.frc2025.opencv"
repo_url = "https://frcmaven.wpi.edu/artifactory/release"
version = "4.10.0-3"

staticlibs = ["opencv4100"]
extract_to = "lib"


[tool.hatch.build.hooks.semiwrap]

[tool.hatch.build.hooks.meson]


[tool.semiwrap]
update_init = [
    "cscore"
]

scan_headers_ignore = [
    # Only wrapping the C++ API
    "cscore.h",
    "cscore_c.h",
    "cscore_raw.h",

    # Not needed
    "cameraserver/CameraServerShared.h",
    "vision/VisionPipeline.h",
    "vision/VisionRunner.h",

    # Not wrapping OpenCV or cvnp
    "cvnp/*",
    "opencv2/*"
]

[tool.semiwrap.extension_modules."cscore._cscore"]
name = "cscore"

depends = ["wpiutil", "wpinet", "ntcore", "cscore-casters"]
includes = [
    "lib/include"
]

[tool.semiwrap.extension_modules."cscore._cscore".headers]
# cameraserver
CameraServer = "cameraserver/CameraServer.h"

# cscore
cscore_cpp = "cscore_cpp.h"
cscore_oo = "cscore_oo.h"
cscore_cv = "cscore_cv.h"
cscore_runloop = "cscore_runloop.h"

[tool.semiwrap.export_type_casters.cscore-casters]
pypackage = "cscore"
includedir = ["cscore"]

[[tool.semiwrap.export_type_casters.cscore-casters.headers]]
header = "cvnp/cvnp.h"
types = ["cv::Mat"]
