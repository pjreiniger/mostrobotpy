
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/AnalogTriggerType.h>
















#include <type_traits>


  using namespace frc;





struct rpybuild_AnalogTriggerType_initializer {







  
  py::enum_<frc::AnalogTriggerType> enum1;







  py::module &m;

  
  rpybuild_AnalogTriggerType_initializer(py::module &m) :

  

  
    enum1
  (m, "AnalogTriggerType"
  ,
    "Defines the state in which the AnalogTrigger triggers."),
  

  

  

    m(m)
  {
    
    
      enum1
  
    .value("kInWindow", frc::AnalogTriggerType::kInWindow,
      "In window.")
  
    .value("kState", frc::AnalogTriggerType::kState,
      "State.")
  
    .value("kRisingPulse", frc::AnalogTriggerType::kRisingPulse,
      "Rising Pulse.")
  
    .value("kFallingPulse", frc::AnalogTriggerType::kFallingPulse,
      "Falling pulse.")
  ;

    

    
  }

void finish() {










}

}; // struct rpybuild_AnalogTriggerType_initializer

static std::unique_ptr<rpybuild_AnalogTriggerType_initializer> cls;

void begin_init_AnalogTriggerType(py::module &m) {
  cls = std::make_unique<rpybuild_AnalogTriggerType_initializer>(m);
}

void finish_init_AnalogTriggerType() {
  cls->finish();
  cls.reset();
}