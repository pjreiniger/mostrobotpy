
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/simulation/ADXL345Sim.h>














#include <frc/ADXL345_I2C.h>

#include <frc/ADXL345_SPI.h>



#include <type_traits>


  using namespace frc;

  using namespace frc::sim;





struct rpybuild_ADXL345Sim_initializer {


  

  












  py::class_<typename frc::sim::ADXL345Sim> cls_ADXL345Sim;

    

    
    

  py::module &m;

  
  rpybuild_ADXL345Sim_initializer(py::module &m) :

  

  

  

  
    cls_ADXL345Sim(m, "ADXL345Sim"),

  

  
  
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {





  {
  
  
  


  

  cls_ADXL345Sim.doc() =
    "Class to control a simulated ADXL345.";

  cls_ADXL345Sim
  
    
  .def(py::init<const ADXL345_I2C&>(),
      py::arg("accel"), release_gil()
    , py::keep_alive<1, 2>(), py::doc(
    "Constructs from a ADXL345_I2C object.\n"
"\n"
":param accel: ADXL345 accel to simulate")
  )
  
  
  
    
  .def(py::init<const ADXL345_SPI&>(),
      py::arg("accel"), release_gil()
    , py::keep_alive<1, 2>(), py::doc(
    "Constructs from a ADXL345_SPI object.\n"
"\n"
":param accel: ADXL345 accel to simulate")
  )
  
  
  
    
  .
def
("setX", &frc::sim::ADXL345Sim::SetX,
      py::arg("accel"), release_gil(), py::doc(
    "Sets the X acceleration.\n"
"\n"
":param accel: The X acceleration.")
  )
  
  
  
    
  .
def
("setY", &frc::sim::ADXL345Sim::SetY,
      py::arg("accel"), release_gil(), py::doc(
    "Sets the Y acceleration.\n"
"\n"
":param accel: The Y acceleration.")
  )
  
  
  
    
  .
def
("setZ", &frc::sim::ADXL345Sim::SetZ,
      py::arg("accel"), release_gil(), py::doc(
    "Sets the Z acceleration.\n"
"\n"
":param accel: The Z acceleration.")
  )
  
  
  ;

  


  }






}

}; // struct rpybuild_ADXL345Sim_initializer

static std::unique_ptr<rpybuild_ADXL345Sim_initializer> cls;

void begin_init_ADXL345Sim(py::module &m) {
  cls = std::make_unique<rpybuild_ADXL345Sim_initializer>(m);
}

void finish_init_ADXL345Sim() {
  cls->finish();
  cls.reset();
}