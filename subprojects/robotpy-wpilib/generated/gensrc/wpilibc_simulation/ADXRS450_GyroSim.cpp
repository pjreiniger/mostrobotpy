
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/simulation/ADXRS450_GyroSim.h>


#include <units_angle_type_caster.h>

#include <units_angular_velocity_type_caster.h>













#include <frc/ADXRS450_Gyro.h>



#include <type_traits>


  using namespace frc;

  using namespace frc::sim;



struct rpybuild_ADXRS450_GyroSim_initializer {


  

  












  py::class_<typename frc::sim::ADXRS450_GyroSim> cls_ADXRS450_GyroSim;

    

    
    

  py::module &m;

  
  rpybuild_ADXRS450_GyroSim_initializer(py::module &m) :

  

  

  

  
    cls_ADXRS450_GyroSim(m, "ADXRS450_GyroSim"),

  

  
  
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {





  {
  
  
  


  

  cls_ADXRS450_GyroSim.doc() =
    "Class to control a simulated ADXRS450 gyroscope.";

  cls_ADXRS450_GyroSim
  
    
  .def(py::init<const ADXRS450_Gyro&>(),
      py::arg("gyro"), release_gil()
    , py::keep_alive<1, 2>(), py::doc(
    "Constructs from a ADXRS450_Gyro object.\n"
"\n"
":param gyro: ADXRS450_Gyro to simulate")
  )
  
  
  
    
  .
def
("setAngle", &frc::sim::ADXRS450_GyroSim::SetAngle,
      py::arg("angle"), release_gil(), py::doc(
    "Sets the angle.\n"
"\n"
":param angle: The angle (clockwise positive).")
  )
  
  
  
    
  .
def
("setRate", &frc::sim::ADXRS450_GyroSim::SetRate,
      py::arg("rate"), release_gil(), py::doc(
    "Sets the angular rate (clockwise positive).\n"
"\n"
":param rate: The angular rate.")
  )
  
  
  ;

  


  }






}

}; // struct rpybuild_ADXRS450_GyroSim_initializer

static std::unique_ptr<rpybuild_ADXRS450_GyroSim_initializer> cls;

void begin_init_ADXRS450_GyroSim(py::module &m) {
  cls = std::make_unique<rpybuild_ADXRS450_GyroSim_initializer>(m);
}

void finish_init_ADXRS450_GyroSim() {
  cls->finish();
  cls.reset();
}