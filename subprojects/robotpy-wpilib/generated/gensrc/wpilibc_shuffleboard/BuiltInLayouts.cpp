
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/shuffleboard/BuiltInLayouts.h>
















#include <type_traits>


  using namespace frc;



struct rpybuild_BuiltInLayouts_initializer {







  
  py::enum_<frc::BuiltInLayouts> enum1;







  py::module &m;

  
  rpybuild_BuiltInLayouts_initializer(py::module &m) :

  

  
    enum1
  (m, "BuiltInLayouts"
  ,
    "The types of layouts bundled with Shuffleboard.\n"
"\n"
"<pre>{@code\n"
"ShuffleboardLayout myList = Shuffleboard::GetTab(\"My Tab\")\n"
".GetLayout(BuiltinLayouts::kList, \"My List\");\n"
"}</pre>"),
  

  

  

    m(m)
  {
    
    
      enum1
  
    .value("kList", frc::BuiltInLayouts::kList,
      "Groups components in a vertical list. New widgets added to the layout will\n"
"be placed at the bottom of the list. \n"
"Custom properties: <table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Label position</td><td>String</td><td>\"BOTTOM\"</td>\n"
"<td>The position of component labels inside the grid. One of\n"
"``[\"TOP\", \"LEFT\", \"BOTTOM\", \"RIGHT\", \"HIDDEN\"``</td></tr>\n"
"</table>")
  
    .value("kGrid", frc::BuiltInLayouts::kGrid,
      "Groups components in an *n* x *m* grid. Grid layouts default to\n"
"3x3. \n"
"Custom properties: <table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Number of columns</td><td>Number</td><td>3</td><td>Must be in the\n"
"range [1,15]</td>\n"
"</tr>\n"
"<tr><td>Number of rows</td><td>Number</td><td>3</td><td>Must be in the\n"
"range [1,15]</td></tr> <tr> <td>Label position</td> <td>String</td>\n"
"<td>\"BOTTOM\"</td>\n"
"<td>The position of component labels inside the grid.\n"
"One of ``[\"TOP\", \"LEFT\", \"BOTTOM\", \"RIGHT\", \"HIDDEN\"``</td>\n"
"</tr>\n"
"</table>")
  ;

    

    
  }

void finish() {










}

}; // struct rpybuild_BuiltInLayouts_initializer

static std::unique_ptr<rpybuild_BuiltInLayouts_initializer> cls;

void begin_init_BuiltInLayouts(py::module &m) {
  cls = std::make_unique<rpybuild_BuiltInLayouts_initializer>(m);
}

void finish_init_BuiltInLayouts() {
  cls->finish();
  cls.reset();
}