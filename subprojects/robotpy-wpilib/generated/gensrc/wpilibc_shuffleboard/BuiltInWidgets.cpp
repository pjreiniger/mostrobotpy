
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/shuffleboard/BuiltInWidgets.h>
















#include <type_traits>


  using namespace frc;





struct rpybuild_BuiltInWidgets_initializer {







  
  py::enum_<frc::BuiltInWidgets> enum1;







  py::module &m;

  
  rpybuild_BuiltInWidgets_initializer(py::module &m) :

  

  
    enum1
  (m, "BuiltInWidgets"
  ,
    "The types of the widgets bundled with Shuffleboard.\n"
"\n"
"For example, setting a number to be displayed with a slider:\n"
"<pre>{@code\n"
"NetworkTableEntry example = Shuffleboard.getTab(\"My Tab\")\n"
".add(\"My Number\", 0)\n"
".withWidget(BuiltInWidgets.kNumberSlider)\n"
".getEntry();\n"
"}</pre>\n"
"\n"
"Each value in this enum goes into detail on what data types that widget\n"
"can support, as well as the custom properties that widget uses."),
  

  

  

    m(m)
  {
    
    
      enum1
  
    .value("kTextView", frc::BuiltInWidgets::kTextView,
      "Displays a value with a simple text field.\n"
"Supported types:\n"
"\n"
"- String\n"
"- Number\n"
"- Boolean\n"
"\n"
"This widget has no custom properties.")
  
    .value("kNumberSlider", frc::BuiltInWidgets::kNumberSlider,
      "Displays a number with a controllable slider.\n"
"Supported types:\n"
"\n"
"- Number\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Min</td><td>Number</td><td>-1.0</td><td>The minimum value of the\n"
"slider</td></tr> <tr><td>Max</td><td>Number</td><td>1.0</td><td>The maximum\n"
"value of the slider</td></tr> <tr><td>Block\n"
"increment</td><td>Number</td><td>0.0625</td> <td>How much to move the\n"
"slider by with the arrow keys</td></tr>\n"
"</table>")
  
    .value("kNumberBar", frc::BuiltInWidgets::kNumberBar,
      "Displays a number with a view-only bar.\n"
"Supported types:\n"
"\n"
"- Number\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Min</td><td>Number</td><td>-1.0</td><td>The minimum value of the\n"
"bar</td></tr> <tr><td>Max</td><td>Number</td><td>1.0</td><td>The maximum\n"
"value of the bar</td></tr>\n"
"<tr><td>Center</td><td>Number</td><td>0</td><td>The center (\"zero\") value\n"
"of the bar</td></tr>\n"
"</table>")
  
    .value("kDial", frc::BuiltInWidgets::kDial,
      "Displays a number with a view-only dial. Displayed values are rounded to\n"
"the nearest integer. \n"
"Supported types:  - Number\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Min</td><td>Number</td><td>0</td><td>The minimum value of the\n"
"dial</td></tr> <tr><td>Max</td><td>Number</td><td>100</td><td>The maximum\n"
"value of the dial</td></tr> <tr><td>Show\n"
"value</td><td>Boolean</td><td>true</td> <td>Whether or not to show the\n"
"value as text</td></tr>\n"
"</table>")
  
    .value("kGraph", frc::BuiltInWidgets::kGraph,
      "Displays a number with a graph. **NOTE:** graphs can be taxing\n"
"on the computer running the dashboard. Keep the number of visible data\n"
"points to a minimum. Making the widget smaller also helps with performance,\n"
"but may cause the graph to become difficult to read. \n"
"Supported types:\n"
"\n"
"- Number\n"
"- Number array\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Visible time</td><td>Number</td><td>30</td>\n"
"<td>How long, in seconds, should past data be visible for</td></tr>\n"
"</table>")
  
    .value("kBooleanBox", frc::BuiltInWidgets::kBooleanBox,
      "Displays a boolean value as a large colored box.\n"
"Supported types:\n"
"\n"
"- Boolean\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Color when true</td><td>Color</td><td>\"green\"</td>\n"
"<td>Can be specified as a string (``\"#00FF00\"``) or a rgba integer\n"
"(``0x00FF0000``)\n"
"</td></tr>\n"
"<tr><td>Color when false</td><td>Color</td><td>\"red\"</td>\n"
"<td>Can be specified as a string or a number</td></tr>\n"
"</table>")
  
    .value("kToggleButton", frc::BuiltInWidgets::kToggleButton,
      "Displays a boolean with a large interactive toggle button.\n"
"Supported types:\n"
"\n"
"- Boolean\n"
"\n"
"This widget has no custom properties.")
  
    .value("kToggleSwitch", frc::BuiltInWidgets::kToggleSwitch,
      "Displays a boolean with a fixed-size toggle switch.\n"
"Supported types:\n"
"\n"
"- Boolean\n"
"\n"
"This widget has no custom properties.")
  
    .value("kVoltageView", frc::BuiltInWidgets::kVoltageView,
      "Displays an analog input or a raw number with a number bar.\n"
"Supported types:\n"
"\n"
"- Number\n"
"- AnalogInput\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Min</td><td>Number</td><td>0</td><td>The minimum value of the\n"
"bar</td></tr> <tr><td>Max</td><td>Number</td><td>5</td><td>The maximum\n"
"value of the bar</td></tr>\n"
"<tr><td>Center</td><td>Number</td><td>0</td><td>The center (\"zero\") value\n"
"of the bar</td></tr>\n"
"<tr><td>Orientation</td><td>String</td><td>\"HORIZONTAL\"</td>\n"
"<td>The orientation of the bar. One of {@code [\"HORIZONTAL\",\n"
"\"VERTICAL\"]}</td></tr> <tr><td>Number of tick\n"
"marks</td><td>Number</td><td>5</td> <td>The number of discrete ticks on the\n"
"bar</td></tr>\n"
"</table>")
  
    .value("kPowerDistribution", frc::BuiltInWidgets::kPowerDistribution,
      "Displays a PowerDistribution. \n"
"Supported types:  -\n"
"PowerDistribution\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Show voltage and current values</td><td>Boolean</td><td>true</td>\n"
"<td>Whether or not to display the voltage and current draw</td></tr>\n"
"</table>")
  
    .value("kComboBoxChooser", frc::BuiltInWidgets::kComboBoxChooser,
      "Displays a SendableChooser with a dropdown combo box with a list of\n"
"options.\n"
"Supported types:\n"
"\n"
"- SendableChooser\n"
"\n"
"This widget has no custom properties.")
  
    .value("kSplitButtonChooser", frc::BuiltInWidgets::kSplitButtonChooser,
      "Displays a SendableChooserwith a toggle button for each available option.\n"
"Supported types:\n"
"\n"
"- SendableChooser\n"
"\n"
"This widget has no custom properties.")
  
    .value("kEncoder", frc::BuiltInWidgets::kEncoder,
      "Displays an Encoder displaying its speed,\n"
"total traveled distance, and its distance per tick. \n"
"Supported types:\n"
"\n"
"- Encoder\n"
"\n"
"This widget has no custom properties.")
  
    .value("kMotorController", frc::BuiltInWidgets::kMotorController,
      "Displays a MotorController.\n"
"The motor controller will be controllable from the dashboard when test mode\n"
"is enabled, but will otherwise be view-only. \n"
"Supported types:\n"
"- PWMMotorController\n"
"- DMC60\n"
"- Jaguar\n"
"- PWMTalonSRX\n"
"- PWMVictorSPX\n"
"- SD540\n"
"- Spark\n"
"- Talon\n"
"- Victor\n"
"- VictorSP\n"
"- MotorControllerGroup\n"
"- Any custom subclass of ``SpeedContorller``\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Orientation</td><td>String</td><td>\"HORIZONTAL\"</td>\n"
"<td>One of ``[\"HORIZONTAL\", \"VERTICAL\"]``</td></tr>\n"
"</table>")
  
    .value("kCommand", frc::BuiltInWidgets::kCommand,
      "Displays a command with a toggle button. Pressing the button will start the\n"
"command, and the button will automatically release when the command\n"
"completes. \n"
"Supported types:  - Command - CommandGroup\n"
"- Any custom subclass of ``Command`` or ``CommandGroup``\n"
"\n"
"This widget has no custom properties.")
  
    .value("kPIDCommand", frc::BuiltInWidgets::kPIDCommand,
      "Displays a PID command with a checkbox and an editor for the PIDF\n"
"constants. Selecting the checkbox will start the command, and the checkbox\n"
"will automatically deselect when the command completes. \n"
"Supported\n"
"types:  - PIDCommand\n"
"- Any custom subclass of ``PIDCommand``\n"
"\n"
"This widget has no custom properties.")
  
    .value("kPIDController", frc::BuiltInWidgets::kPIDController,
      "Displays a PID controller with an editor for the PIDF constants and a\n"
"toggle switch for enabling and disabling the controller. \n"
"Supported\n"
"types:  - PIDController\n"
"\n"
"This widget has no custom properties.")
  
    .value("kAccelerometer", frc::BuiltInWidgets::kAccelerometer,
      "Displays an accelerometer with a number bar displaying the magnitude of the\n"
"acceleration and text displaying the exact value. \n"
"Supported types:\n"
"- AnalogAccelerometer\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Min</td><td>Number</td><td>-1</td>\n"
"<td>The minimum acceleration value to display</td></tr>\n"
"<tr><td>Max</td><td>Number</td><td>1</td>\n"
"<td>The maximum acceleration value to display</td></tr>\n"
"<tr><td>Show text</td><td>Boolean</td><td>true</td>\n"
"<td>Show or hide the acceleration values</td></tr>\n"
"<tr><td>Precision</td><td>Number</td><td>2</td>\n"
"<td>How many numbers to display after the decimal point</td></tr>\n"
"<tr><td>Show tick marks</td><td>Boolean</td><td>false</td>\n"
"<td>Show or hide the tick marks on the number bars</td></tr>\n"
"</table>")
  
    .value("k3AxisAccelerometer", frc::BuiltInWidgets::k3AxisAccelerometer,
      "Displays a 3-axis accelerometer with a number bar for each axis'\n"
"acceleration. \n"
"Supported types:  - ADXL345_I2C -\n"
"ADXL345_SPI - ADXL362\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Range</td><td>Range</td><td>k16G</td><td>The accelerometer\n"
"range</td></tr> <tr><td>Show value</td><td>Boolean</td><td>true</td>\n"
"<td>Show or hide the acceleration values</td></tr>\n"
"<tr><td>Precision</td><td>Number</td><td>2</td>\n"
"<td>How many numbers to display after the decimal point</td></tr>\n"
"<tr><td>Show tick marks</td><td>Boolean</td><td>false</td>\n"
"<td>Show or hide the tick marks on the number bars</td></tr>\n"
"</table>")
  
    .value("kGyro", frc::BuiltInWidgets::kGyro,
      "Displays a gyro with a dial from 0 to 360 degrees.\n"
"Supported types:\n"
"\n"
"- ADXRS450_Gyro\n"
"- AnalogGyro\n"
"- Any custom subclass of ``GyroBase`` (such as a MXP gyro)\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Major tick\n"
"spacing</td><td>Number</td><td>45</td><td>Degrees</td></tr>\n"
"<tr><td>Starting angle</td><td>Number</td><td>180</td>\n"
"<td>How far to rotate the entire dial, in degrees</td></tr>\n"
"<tr><td>Show tick mark ring</td><td>Boolean</td><td>true</td></tr>\n"
"</table>")
  
    .value("kRelay", frc::BuiltInWidgets::kRelay,
      "Displays a relay with toggle buttons for each supported mode (off, on,\n"
"forward, reverse). \n"
"Supported types:  - Relay\n"
"\n"
"This widget has no custom properties.")
  
    .value("kDifferentialDrive", frc::BuiltInWidgets::kDifferentialDrive,
      "Displays a differential drive with a widget that displays the speed of each\n"
"side of the drivebase and a vector for the direction and rotation of the\n"
"drivebase. The widget will be controllable if the robot is in test mode.\n"
"Supported types:\n"
"\n"
"- DifferentialDrive\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Number of wheels</td><td>Number</td><td>4</td><td>Must be a\n"
"positive even integer\n"
"</td></tr>\n"
"<tr><td>Wheel diameter</td><td>Number</td><td>80</td><td>Pixels</td></tr>\n"
"<tr><td>Show velocity vectors</td><td>Boolean</td><td>true</td></tr>\n"
"</table>")
  
    .value("kMecanumDrive", frc::BuiltInWidgets::kMecanumDrive,
      "Displays a mecanum drive with a widget that displays the speed of each\n"
"wheel, and vectors for the direction and rotation of the drivebase. The\n"
"widget will be controllable if the robot is in test mode. \n"
"Supported\n"
"types:  - MecanumDrive\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Show velocity vectors</td><td>Boolean</td><td>true</td></tr>\n"
"</table>")
  
    .value("kCameraStream", frc::BuiltInWidgets::kCameraStream,
      "Displays a camera stream.\n"
"Supported types:\n"
"\n"
"- VideoSource (as long as it is streaming on an MJPEG server)\n"
"\n"
"Custom properties:\n"
"<table>\n"
"<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n"
"<tr><td>Show crosshair</td><td>Boolean</td><td>true</td>\n"
"<td>Show or hide a crosshair on the image</td></tr>\n"
"<tr><td>Crosshair color</td><td>Color</td><td>\"white\"</td>\n"
"<td>Can be a string or a rgba integer</td></tr>\n"
"<tr><td>Show controls</td><td>Boolean</td><td>true</td><td>Show or hide the\n"
"stream controls\n"
"</td></tr>\n"
"<tr><td>Rotation</td><td>String</td><td>\"NONE\"</td>\n"
"<td>Rotates the displayed image. One of {@code [\"NONE\", \"QUARTER_CW\",\n"
"\"QUARTER_CCW\", \"HALF\"]}\n"
"</td></tr>\n"
"</table>")
  
    .value("kField", frc::BuiltInWidgets::kField,
      "Displays a field2d object.\n"
"Supported types:\n"
"\n"
"- Field2d")
  ;

    

    
  }

void finish() {










}

}; // struct rpybuild_BuiltInWidgets_initializer

static std::unique_ptr<rpybuild_BuiltInWidgets_initializer> cls;

void begin_init_BuiltInWidgets(py::module &m) {
  cls = std::make_unique<rpybuild_BuiltInWidgets_initializer>(m);
}

void finish_init_BuiltInWidgets() {
  cls->finish();
  cls.reset();
}