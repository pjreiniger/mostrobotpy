
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <frc/shuffleboard/ShuffleboardInstance.h>














#include <networktables/NetworkTableInstance.h>



#include <type_traits>


  using namespace frc::detail;



struct rpybuild_ShuffleboardInstance_initializer {


  

  












  py::class_<typename frc::detail::ShuffleboardInstance, frc::ShuffleboardRoot> cls_ShuffleboardInstance;

    

    
    

  py::module &m;

  
  rpybuild_ShuffleboardInstance_initializer(py::module &m) :

  

  

  

  
    cls_ShuffleboardInstance(m, "_ShuffleboardInstance", py::is_final()),

  

  
  
  

    m(m)
  {
    
    

    
    
  

    
    
  }

void finish() {





  {
  
  
  


  

  

  cls_ShuffleboardInstance
  
    
  .def(py::init<nt::NetworkTableInstance>(),
      py::arg("ntInstance"), release_gil()
  )
  
  
  
    
  .
def
("getTab", &frc::detail::ShuffleboardInstance::GetTab,
      py::arg("title"), release_gil(), py::return_value_policy::reference_internal
  )
  
  
  
    
  .
def
("update", &frc::detail::ShuffleboardInstance::Update, release_gil()
  )
  
  
  
    
  .
def
("enableActuatorWidgets", &frc::detail::ShuffleboardInstance::EnableActuatorWidgets, release_gil()
  )
  
  
  
    
  .
def
("disableActuatorWidgets", &frc::detail::ShuffleboardInstance::DisableActuatorWidgets, release_gil()
  )
  
  
  
    
  .
def
("selectTab", static_cast<void(frc::detail::ShuffleboardInstance::*)(int)>(
        &frc::detail::ShuffleboardInstance::SelectTab),
      py::arg("index"), release_gil()
  )
  
  
  
    
  .
def
("selectTab", static_cast<void(frc::detail::ShuffleboardInstance::*)(std::string_view)>(
        &frc::detail::ShuffleboardInstance::SelectTab),
      py::arg("param0"), release_gil()
  )
  
  
  ;

  


  }






}

}; // struct rpybuild_ShuffleboardInstance_initializer

static std::unique_ptr<rpybuild_ShuffleboardInstance_initializer> cls;

void begin_init_ShuffleboardInstance(py::module &m) {
  cls = std::make_unique<rpybuild_ShuffleboardInstance_initializer>(m);
}

void finish_init_ShuffleboardInstance() {
  cls->finish();
  cls.reset();
}