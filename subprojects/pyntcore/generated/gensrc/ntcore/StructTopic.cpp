
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <networktables/StructTopic.h>


#include <pybind11/stl.h>

#include <wpi_json_type_caster.h>

#include <wpystruct.h>







#define RPYGEN_ENABLE_nt__StructSubscriber_PROTECTED_CONSTRUCTORS
#include <rpygen/nt__StructSubscriber.hpp>

#define RPYGEN_ENABLE_nt__StructPublisher_PROTECTED_CONSTRUCTORS
#include <rpygen/nt__StructPublisher.hpp>





#include "StructTopic_tmpl.hpp"





#include <type_traits>


  using namespace nt;



struct rpybuild_StructTopic_initializer {












  
      rpygen::bind_nt__StructSubscriber_0 tmplCls0;
    
  
      rpygen::bind_nt__StructPublisher_1 tmplCls1;
    
  
      rpygen::bind_nt__StructEntry_2 tmplCls2;
    
  
      rpygen::bind_nt__StructTopic_3 tmplCls3;
    

  py::module &m;

  
  rpybuild_StructTopic_initializer(py::module &m) :

  

  

  

  
    
        tmplCls0(m, "StructSubscriber"),
      
  
    
        tmplCls1(m, "StructPublisher"),
      
  
    
        tmplCls2(m, "StructEntry"),
      
  
    
        tmplCls3(m, "StructTopic"),
      
  

    m(m)
  {
    
    

    
    
  

    
    
    
  

    
    
    
  

    
    
    
  

    
    
  }

void finish() {



  tmplCls0.finish(
    NULL,
    NULL
  );

  tmplCls1.finish(
    NULL,
    NULL
  );

  tmplCls2.finish(
    NULL,
    NULL
  );

  tmplCls3.finish(
    NULL,
    NULL
  );








}

}; // struct rpybuild_StructTopic_initializer

static std::unique_ptr<rpybuild_StructTopic_initializer> cls;

void begin_init_StructTopic(py::module &m) {
  cls = std::make_unique<rpybuild_StructTopic_initializer>(m);
}

void finish_init_StructTopic() {
  cls->finish();
  cls.reset();
}