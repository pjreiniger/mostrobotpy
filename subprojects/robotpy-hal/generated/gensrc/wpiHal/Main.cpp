
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <hal/Main.h>
















#include <type_traits>




struct rpybuild_Main_initializer {













  py::module &m;

  
  rpybuild_Main_initializer(py::module &m) :

  

  

  

  

    m(m)
  {
    
    

    
  }

void finish() {







m
  .
def
("hasMain", &::HAL_HasMain, release_gil(), py::doc(
    "Returns true if HAL_SetMain() has been called.\n"
"\n"
":returns: True if HAL_SetMain() has been called, false otherwise.")
  )
  
  ;
m
  .
def
("runMain", &::HAL_RunMain, release_gil(), py::doc(
    "Runs the main function provided to HAL_SetMain().\n"
"\n"
"If HAL_SetMain() has not been called, simply sleeps until HAL_ExitMain()\n"
"is called.")
  )
  
  ;
m
  .
def
("exitMain", &::HAL_ExitMain, release_gil(), py::doc(
    "Causes HAL_RunMain() to exit.\n"
"\n"
"If HAL_SetMain() has been called, this calls the exit function provided\n"
"to that function.")
  )
  
  ;



}

}; // struct rpybuild_Main_initializer

static std::unique_ptr<rpybuild_Main_initializer> cls;

void begin_init_Main(py::module &m) {
  cls = std::make_unique<rpybuild_Main_initializer>(m);
}

void finish_init_Main() {
  cls->finish();
  cls.reset();
}