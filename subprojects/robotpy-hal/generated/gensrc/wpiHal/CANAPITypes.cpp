
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <hal/CANAPITypes.h>
















#include <type_traits>




struct rpybuild_CANAPITypes_initializer {







  
  py::enum_<::HAL_CANDeviceType> enum1;

  
  py::enum_<::HAL_CANManufacturer> enum2;







  py::module &m;

  
  rpybuild_CANAPITypes_initializer(py::module &m) :

  

  
    enum1
  (m, "CANDeviceType"
  ,
    "The CAN device type.\n"
"\n"
"Teams should use HAL_CAN_Dev_kMiscellaneous"),
  
    enum2
  (m, "CANManufacturer"
  ,
    "The CAN manufacturer ID.\n"
"\n"
"Teams should use HAL_CAN_Man_kTeamUse."),
  

  

  

    m(m)
  {
    
    
      enum1
  
    .value("kBroadcast", ::HAL_CANDeviceType::HAL_CAN_Dev_kBroadcast,
      "Broadcast.")
  
    .value("kRobotController", ::HAL_CANDeviceType::HAL_CAN_Dev_kRobotController,
      "Robot controller.")
  
    .value("kMotorController", ::HAL_CANDeviceType::HAL_CAN_Dev_kMotorController,
      "Motor controller.")
  
    .value("kRelayController", ::HAL_CANDeviceType::HAL_CAN_Dev_kRelayController,
      "Relay controller.")
  
    .value("kGyroSensor", ::HAL_CANDeviceType::HAL_CAN_Dev_kGyroSensor,
      "Gyro sensor.")
  
    .value("kAccelerometer", ::HAL_CANDeviceType::HAL_CAN_Dev_kAccelerometer,
      "Accelerometer.")
  
    .value("kUltrasonicSensor", ::HAL_CANDeviceType::HAL_CAN_Dev_kUltrasonicSensor,
      "Ultrasonic sensor.")
  
    .value("kGearToothSensor", ::HAL_CANDeviceType::HAL_CAN_Dev_kGearToothSensor,
      "Gear tooth sensor.")
  
    .value("kPowerDistribution", ::HAL_CANDeviceType::HAL_CAN_Dev_kPowerDistribution,
      "Power distribution.")
  
    .value("kPneumatics", ::HAL_CANDeviceType::HAL_CAN_Dev_kPneumatics,
      "Pneumatics.")
  
    .value("kMiscellaneous", ::HAL_CANDeviceType::HAL_CAN_Dev_kMiscellaneous,
      "Miscellaneous.")
  
    .value("kIOBreakout", ::HAL_CANDeviceType::HAL_CAN_Dev_kIOBreakout,
      "IO breakout.")
  
    .value("kFirmwareUpdate", ::HAL_CANDeviceType::HAL_CAN_Dev_kFirmwareUpdate,
      "Firmware update.")
  ;

    
      enum2
  
    .value("kBroadcast", ::HAL_CANManufacturer::HAL_CAN_Man_kBroadcast,
      "Broadcast.")
  
    .value("kNI", ::HAL_CANManufacturer::HAL_CAN_Man_kNI,
      "National Instruments.")
  
    .value("kLM", ::HAL_CANManufacturer::HAL_CAN_Man_kLM,
      "Luminary Micro.")
  
    .value("kDEKA", ::HAL_CANManufacturer::HAL_CAN_Man_kDEKA,
      "DEKA Research and Development Corp.")
  
    .value("kCTRE", ::HAL_CANManufacturer::HAL_CAN_Man_kCTRE,
      "Cross the Road Electronics.")
  
    .value("kREV", ::HAL_CANManufacturer::HAL_CAN_Man_kREV,
      "REV robotics.")
  
    .value("kGrapple", ::HAL_CANManufacturer::HAL_CAN_Man_kGrapple,
      "Grapple.")
  
    .value("kMS", ::HAL_CANManufacturer::HAL_CAN_Man_kMS,
      "MindSensors.")
  
    .value("kTeamUse", ::HAL_CANManufacturer::HAL_CAN_Man_kTeamUse,
      "Team use.")
  
    .value("kKauaiLabs", ::HAL_CANManufacturer::HAL_CAN_Man_kKauaiLabs,
      "Kauai Labs.")
  
    .value("kCopperforge", ::HAL_CANManufacturer::HAL_CAN_Man_kCopperforge,
      "Copperforge.")
  
    .value("kPWF", ::HAL_CANManufacturer::HAL_CAN_Man_kPWF,
      "Playing With Fusion.")
  
    .value("kStudica", ::HAL_CANManufacturer::HAL_CAN_Man_kStudica,
      "Studica.")
  
    .value("kTheThriftyBot", ::HAL_CANManufacturer::HAL_CAN_Man_kTheThriftyBot,
      "TheThriftyBot.")
  
    .value("kReduxRobotics", ::HAL_CANManufacturer::HAL_CAN_Man_kReduxRobotics,
      "Redux Robotics.")
  
    .value("kAndyMark", ::HAL_CANManufacturer::HAL_CAN_Man_kAndyMark,
      "AndyMark.")
  
    .value("kVividHosting", ::HAL_CANManufacturer::HAL_CAN_Man_kVividHosting,
      "Vivid-Hosting.")
  ;

    

    
  }

void finish() {










}

}; // struct rpybuild_CANAPITypes_initializer

static std::unique_ptr<rpybuild_CANAPITypes_initializer> cls;

void begin_init_CANAPITypes(py::module &m) {
  cls = std::make_unique<rpybuild_CANAPITypes_initializer>(m);
}

void finish_init_CANAPITypes() {
  cls->finish();
  cls.reset();
}