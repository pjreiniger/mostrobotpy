
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <hal/SPITypes.h>
















#include <type_traits>


  using namespace hal;



struct rpybuild_SPITypes_initializer {







  
  py::enum_<::HAL_SPIPort> enum1;

  
  py::enum_<::HAL_SPIMode> enum2;







  py::module &m;

  
  rpybuild_SPITypes_initializer(py::module &m) :

  

  
    enum1
  (m, "SPIPort"
  ,
    "SPI port."),
  
    enum2
  (m, "SPIMode"
  ,
    "SPI mode."),
  

  

  

    m(m)
  {
    
    
      enum1
  
    .value("kInvalid", ::HAL_SPIPort::HAL_SPI_kInvalid,
      "Invalid port number.")
  
    .value("kOnboardCS0", ::HAL_SPIPort::HAL_SPI_kOnboardCS0,
      "Onboard SPI bus port CS0.")
  
    .value("kOnboardCS1", ::HAL_SPIPort::HAL_SPI_kOnboardCS1,
      "Onboard SPI bus port CS1.")
  
    .value("kOnboardCS2", ::HAL_SPIPort::HAL_SPI_kOnboardCS2,
      "Onboard SPI bus port CS2.")
  
    .value("kOnboardCS3", ::HAL_SPIPort::HAL_SPI_kOnboardCS3,
      "Onboard SPI bus port CS3.")
  
    .value("kMXP", ::HAL_SPIPort::HAL_SPI_kMXP,
      "MXP (roboRIO MXP) SPI bus port.")
  ;

    
      enum2
  
    .value("kMode0", ::HAL_SPIMode::HAL_SPI_kMode0,
      "Clock idle low, data sampled on rising edge.")
  
    .value("kMode1", ::HAL_SPIMode::HAL_SPI_kMode1,
      "Clock idle low, data sampled on falling edge.")
  
    .value("kMode2", ::HAL_SPIMode::HAL_SPI_kMode2,
      "Clock idle high, data sampled on falling edge.")
  
    .value("kMode3", ::HAL_SPIMode::HAL_SPI_kMode3,
      "Clock idle high, data sampled on rising edge.")
  ;

    

    
  }

void finish() {










}

}; // struct rpybuild_SPITypes_initializer

static std::unique_ptr<rpybuild_SPITypes_initializer> cls;

void begin_init_SPITypes(py::module &m) {
  cls = std::make_unique<rpybuild_SPITypes_initializer>(m);
}

void finish_init_SPITypes() {
  cls->finish();
  cls.reset();
}