
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <hal/simulation/RelayData.h>
















#include <type_traits>




struct rpybuild_RelayData_initializer {













  py::module &m;

  
  rpybuild_RelayData_initializer(py::module &m) :

  

  

  

  

    m(m)
  {
    
    

    
  }

void finish() {







m
  .
def
("resetRelayData", &::HALSIM_ResetRelayData,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("cancelRelayInitializedForwardCallback", &::HALSIM_CancelRelayInitializedForwardCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getRelayInitializedForward", &::HALSIM_GetRelayInitializedForward,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setRelayInitializedForward", &::HALSIM_SetRelayInitializedForward,
      py::arg("index"), py::arg("initializedForward"), release_gil()
  )
  
  ;
m
  .
def
("cancelRelayInitializedReverseCallback", &::HALSIM_CancelRelayInitializedReverseCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getRelayInitializedReverse", &::HALSIM_GetRelayInitializedReverse,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setRelayInitializedReverse", &::HALSIM_SetRelayInitializedReverse,
      py::arg("index"), py::arg("initializedReverse"), release_gil()
  )
  
  ;
m
  .
def
("cancelRelayForwardCallback", &::HALSIM_CancelRelayForwardCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getRelayForward", &::HALSIM_GetRelayForward,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setRelayForward", &::HALSIM_SetRelayForward,
      py::arg("index"), py::arg("forward"), release_gil()
  )
  
  ;
m
  .
def
("cancelRelayReverseCallback", &::HALSIM_CancelRelayReverseCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getRelayReverse", &::HALSIM_GetRelayReverse,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setRelayReverse", &::HALSIM_SetRelayReverse,
      py::arg("index"), py::arg("reverse"), release_gil()
  )
  
  ;



}

}; // struct rpybuild_RelayData_initializer

static std::unique_ptr<rpybuild_RelayData_initializer> cls;

void begin_init_RelayData(py::module &m) {
  cls = std::make_unique<rpybuild_RelayData_initializer>(m);
}

void finish_init_RelayData() {
  cls->finish();
  cls.reset();
}