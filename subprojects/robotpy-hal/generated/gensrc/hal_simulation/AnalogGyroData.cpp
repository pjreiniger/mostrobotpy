
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <hal/simulation/AnalogGyroData.h>
















#include <type_traits>




struct rpybuild_AnalogGyroData_initializer {













  py::module &m;

  
  rpybuild_AnalogGyroData_initializer(py::module &m) :

  

  

  

  

    m(m)
  {
    
    

    
  }

void finish() {







m
  .
def
("resetAnalogGyroData", &::HALSIM_ResetAnalogGyroData,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("cancelAnalogGyroAngleCallback", &::HALSIM_CancelAnalogGyroAngleCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getAnalogGyroAngle", &::HALSIM_GetAnalogGyroAngle,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setAnalogGyroAngle", &::HALSIM_SetAnalogGyroAngle,
      py::arg("index"), py::arg("angle"), release_gil()
  )
  
  ;
m
  .
def
("cancelAnalogGyroRateCallback", &::HALSIM_CancelAnalogGyroRateCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getAnalogGyroRate", &::HALSIM_GetAnalogGyroRate,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setAnalogGyroRate", &::HALSIM_SetAnalogGyroRate,
      py::arg("index"), py::arg("rate"), release_gil()
  )
  
  ;
m
  .
def
("cancelAnalogGyroInitializedCallback", &::HALSIM_CancelAnalogGyroInitializedCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getAnalogGyroInitialized", &::HALSIM_GetAnalogGyroInitialized,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setAnalogGyroInitialized", &::HALSIM_SetAnalogGyroInitialized,
      py::arg("index"), py::arg("initialized"), release_gil()
  )
  
  ;



}

}; // struct rpybuild_AnalogGyroData_initializer

static std::unique_ptr<rpybuild_AnalogGyroData_initializer> cls;

void begin_init_AnalogGyroData(py::module &m) {
  cls = std::make_unique<rpybuild_AnalogGyroData_initializer>(m);
}

void finish_init_AnalogGyroData() {
  cls->finish();
  cls.reset();
}