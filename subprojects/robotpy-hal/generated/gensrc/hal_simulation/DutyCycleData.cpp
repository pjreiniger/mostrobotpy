
// This file is autogenerated. DO NOT EDIT
#include <robotpy_build.h>




#include <hal/simulation/DutyCycleData.h>
















#include <type_traits>






struct rpybuild_DutyCycleData_initializer {













  py::module &m;

  
  rpybuild_DutyCycleData_initializer(py::module &m) :

  

  

  

  

    m(m)
  {
    
    

    
  }

void finish() {







m
  .
def
("findDutyCycleForChannel", &::HALSIM_FindDutyCycleForChannel,
      py::arg("channel"), release_gil()
  )
  
  ;
m
  .
def
("resetDutyCycleData", &::HALSIM_ResetDutyCycleData,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("getDutyCycleDigitalChannel", &::HALSIM_GetDutyCycleDigitalChannel,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("cancelDutyCycleInitializedCallback", &::HALSIM_CancelDutyCycleInitializedCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getDutyCycleInitialized", &::HALSIM_GetDutyCycleInitialized,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setDutyCycleInitialized", &::HALSIM_SetDutyCycleInitialized,
      py::arg("index"), py::arg("initialized"), release_gil()
  )
  
  ;
m
  .
def
("getDutyCycleSimDevice", &::HALSIM_GetDutyCycleSimDevice,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("cancelDutyCycleOutputCallback", &::HALSIM_CancelDutyCycleOutputCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getDutyCycleOutput", &::HALSIM_GetDutyCycleOutput,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setDutyCycleOutput", &::HALSIM_SetDutyCycleOutput,
      py::arg("index"), py::arg("output"), release_gil()
  )
  
  ;
m
  .
def
("cancelDutyCycleFrequencyCallback", &::HALSIM_CancelDutyCycleFrequencyCallback,
      py::arg("index"), py::arg("uid"), release_gil()
  )
  
  ;
m
  .
def
("getDutyCycleFrequency", &::HALSIM_GetDutyCycleFrequency,
      py::arg("index"), release_gil()
  )
  
  ;
m
  .
def
("setDutyCycleFrequency", &::HALSIM_SetDutyCycleFrequency,
      py::arg("index"), py::arg("frequency"), release_gil()
  )
  
  ;



}

}; // struct rpybuild_DutyCycleData_initializer

static std::unique_ptr<rpybuild_DutyCycleData_initializer> cls;

void begin_init_DutyCycleData(py::module &m) {
  cls = std::make_unique<rpybuild_DutyCycleData_initializer>(m);
}

void finish_init_DutyCycleData() {
  cls->finish();
  cls.reset();
}